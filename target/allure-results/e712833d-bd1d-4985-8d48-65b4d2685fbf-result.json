{"name":"findPetTest()","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"1 expectation failed.\nJSON path id doesn't match.\nExpected: <322>\n  Actual: <[1234320, 1816, 1800, 9223372036854772115, 9223372036854772117, 322, 9223372036854772128, 9223372036854772130, 9223372036854772132, 9223372036854772134, 9223372036854772137, 9223372036854772138, 9223372036854772139, 9223372036854772140, 9223372036854772146, 12, 9223372036854772161, 103, 9223372036854772164, 9223372036854772165, 9223372036854772167, 9223372036854772168, 9223372036854772169, 9223372036854772173, 9223372036854772174, 9223372036854772186, 3, 9223372036854772192, 9223372036854772199, 9223372036854772200, 6778, 9223372036854772204, 9223372036854772205, 33, 9223372036854772214, 1234141, 9223372036854772216, 9223372036854772217, 3035, 701, 9223372036854772218, 9223372036854772234, 7681, 9223372036854772235, 9223372036854772241, 9223372036854772243, 9223372036854772244, 3783, 9223372036854772268, 9223372036854772271, 4410, 9223372036854772302, 1000, 9223372036854772309, 9223372036854772311, 9223372036854772312, 9223372036854772313, 9223372036854772315, 9223372036854772316, 778, 9223372036854772317, 9223372036854772339, 9223372036854772341, 9223372036854772342, 9223372036854772344, 9223372036854772367, 9223372036854772380, 8122, 2996, 25622936, 9223372036854772397, 9223372036854772398, 9223372036854772401, 42676290, 58887966, 9223372036854772402, 420, 2918, 2323, 9223372036854772407, 17751411, 9223372036854772408, 7055, 9223372036854772410, 9223372036854772413, 9223372036854772414, 9223372036854772417, 9223372036854772420, 9223372036854772425, 9223372036854772447, 9223372036854772449, 9223372036854772455, 9223372036854772456, 9223372036854772461, 9223372036854772464, 9223372036854772466, 9223372036854772467, 222, 9223372036854772472, 9223372036854772475, 49087884, 9223372036854772487, 9223372036854772488, 9223372036854772489, 9223372036854772490, 9223372036854772491, 9223372036854772494, 9223372036854772509, 9223372036854772516, 9223372036854772524, 9223372036854772535, 9223372036854772547, 9223372036854772548, 9223372036854772552, 9223372036854772553, 23456789, 9223372036854772560, 9223372036854772567, 9223372036854772568, 9223372036854772569, 9223372036854772571, 9223372036854772574, 9223372036854772577, 9223372036854772578, 9223372036854772579, 9223372036854772580, 9223372036854772581, 9223372036854772582, 9223372036854772583, 9223372036854772584, 9223372036854772585, 9223372036854772586, 9223372036854772587, 9223372036854772588, 9223372036854772589, 9223372036854772590, 9223372036854772591, 9223372036854772592, 9223372036854772594, 9223372036854772596, 9223372036854772597, 9223372036854772598, 9223372036854772599, 9223372036854772600, 9223372036854772601, 9223372036854772602, 9223372036854772603, 9223372036854772604, 9223372036854772605, 9223372036854772606, 9223372036854772607, 9223372036854772618, 9223372036854772619, 9223372036854772620, 9223372036854772621, 9223372036854772622, 9223372036854772629, 9223372036854772630, 9223372036854772631, 9223372036854772633, 9223372036854772636, 9223372036854772639, 9223372036854772640, 9223372036854772641, 9223372036854772642, 9223372036854772643, 9223372036854772644, 9223372036854772645, 9223372036854772646, 9223372036854772647, 9223372036854772648, 9223372036854772649, 9223372036854772650, 9223372036854772651, 9223372036854772652, 9223372036854772653, 9223372036854772654, 9223372036854772655, 9223372036854772656, 9223372036854772657, 9223372036854772658, 9223372036854772659, 9223372036854772660, 9223372036854772661, 9223372036854772663, 9223372036854772664, 9223372036854772665, 9223372036854772666, 9223372036854772667, 9223372036854772670, 9223372036854772671, 9223372036854772674, 9223372036854772675, 9223372036854772676, 9223372036854772677, 9223372036854772678, 9223372036854772679, 9223372036854772680, 9223372036854772683, 9223372036854772687, 9223372036854772689, 9223372036854772695, 9223372036854772696, 9223372036854772697, 9223372036854772698, 9223372036854772699, 9223372036854772700, 9223372036854772701, 9223372036854772702, 9223372036854772703, 9223372036854772704, 9223372036854772706, 9223372036854772707, 9223372036854772709, 9223372036854772710, 9223372036854772711, 9223372036854772712, 9223372036854772713, 9223372036854772714, 9223372036854772715, 9223372036854772716, 9223372036854772717, 9223372036854772718, 9223372036854772719, 9223372036854772720, 9223372036854772721, 9223372036854772722, 9223372036854772723, 9223372036854772724, 9223372036854772735, 9223372036854772736, 9223372036854772737, 9223372036854772738, 9223372036854772739, 9223372036854772744, 9223372036854772748, 9223372036854772751, 9223372036854772752, 9223372036854772753, 9223372036854772758, 9223372036854772761, 112233, 9223372036854772764, 9222968140491042131, 9223372036854772765, 9223372036854772766, 9223372036854772771, 9223372036854772772, 9223372036854772773, 9223372036854772778, 9223372036854772786, 9223372036854772787, 9223372036854772792, 9223372036854772793, 9223372036854772794, 9222968140497180179, 9223372036854772805, 1245, 9223372036854772809, 1340, 9223372036854772829, 9223372036854772831, 478364873, 9223372036854772832, 9223372036854772833, 9223372036854772835, 9223372036854772838, 9223372036854772845, 9223372036854772846, 9223372036854772847, 9223372036854772848, 9223372036854772849, 88888, 9223372036854772862, 9223372036854772866, 9223372036854772868, 9223372036854772869, 9223372036854772870, 9223372036854772872, 9223372036854772875, 9223372036854772876, 9223372036854772884, 9223372036854772907, 9223372036854772911, 9223372036854772913, 9223372036854772922, 9223372036854772926, 9223372036854772927, 9223372036854772928, 9223372036854772932, 9223372036854772937, 9223372036854772938, 9223372036854772939, 9223372036854772942, 9223372036854772943, 9223372036854772944, 3342, 9223372036854772959, 5958, 6730, 9223372036854773018, 9223372036854773019, 9223372036854773030, 9223372036854773032, 9223372036854773033, 9223372036854773034, 9223372036854773035, 9223372036854773039, 9359, 9223372036854773044, 9223372036854773045, 9223372036854773046, 9223372036854773048]>\n","trace":"java.lang.AssertionError: 1 expectation failed.\nJSON path id doesn't match.\nExpected: <322>\n  Actual: <[1234320, 1816, 1800, 9223372036854772115, 9223372036854772117, 322, 9223372036854772128, 9223372036854772130, 9223372036854772132, 9223372036854772134, 9223372036854772137, 9223372036854772138, 9223372036854772139, 9223372036854772140, 9223372036854772146, 12, 9223372036854772161, 103, 9223372036854772164, 9223372036854772165, 9223372036854772167, 9223372036854772168, 9223372036854772169, 9223372036854772173, 9223372036854772174, 9223372036854772186, 3, 9223372036854772192, 9223372036854772199, 9223372036854772200, 6778, 9223372036854772204, 9223372036854772205, 33, 9223372036854772214, 1234141, 9223372036854772216, 9223372036854772217, 3035, 701, 9223372036854772218, 9223372036854772234, 7681, 9223372036854772235, 9223372036854772241, 9223372036854772243, 9223372036854772244, 3783, 9223372036854772268, 9223372036854772271, 4410, 9223372036854772302, 1000, 9223372036854772309, 9223372036854772311, 9223372036854772312, 9223372036854772313, 9223372036854772315, 9223372036854772316, 778, 9223372036854772317, 9223372036854772339, 9223372036854772341, 9223372036854772342, 9223372036854772344, 9223372036854772367, 9223372036854772380, 8122, 2996, 25622936, 9223372036854772397, 9223372036854772398, 9223372036854772401, 42676290, 58887966, 9223372036854772402, 420, 2918, 2323, 9223372036854772407, 17751411, 9223372036854772408, 7055, 9223372036854772410, 9223372036854772413, 9223372036854772414, 9223372036854772417, 9223372036854772420, 9223372036854772425, 9223372036854772447, 9223372036854772449, 9223372036854772455, 9223372036854772456, 9223372036854772461, 9223372036854772464, 9223372036854772466, 9223372036854772467, 222, 9223372036854772472, 9223372036854772475, 49087884, 9223372036854772487, 9223372036854772488, 9223372036854772489, 9223372036854772490, 9223372036854772491, 9223372036854772494, 9223372036854772509, 9223372036854772516, 9223372036854772524, 9223372036854772535, 9223372036854772547, 9223372036854772548, 9223372036854772552, 9223372036854772553, 23456789, 9223372036854772560, 9223372036854772567, 9223372036854772568, 9223372036854772569, 9223372036854772571, 9223372036854772574, 9223372036854772577, 9223372036854772578, 9223372036854772579, 9223372036854772580, 9223372036854772581, 9223372036854772582, 9223372036854772583, 9223372036854772584, 9223372036854772585, 9223372036854772586, 9223372036854772587, 9223372036854772588, 9223372036854772589, 9223372036854772590, 9223372036854772591, 9223372036854772592, 9223372036854772594, 9223372036854772596, 9223372036854772597, 9223372036854772598, 9223372036854772599, 9223372036854772600, 9223372036854772601, 9223372036854772602, 9223372036854772603, 9223372036854772604, 9223372036854772605, 9223372036854772606, 9223372036854772607, 9223372036854772618, 9223372036854772619, 9223372036854772620, 9223372036854772621, 9223372036854772622, 9223372036854772629, 9223372036854772630, 9223372036854772631, 9223372036854772633, 9223372036854772636, 9223372036854772639, 9223372036854772640, 9223372036854772641, 9223372036854772642, 9223372036854772643, 9223372036854772644, 9223372036854772645, 9223372036854772646, 9223372036854772647, 9223372036854772648, 9223372036854772649, 9223372036854772650, 9223372036854772651, 9223372036854772652, 9223372036854772653, 9223372036854772654, 9223372036854772655, 9223372036854772656, 9223372036854772657, 9223372036854772658, 9223372036854772659, 9223372036854772660, 9223372036854772661, 9223372036854772663, 9223372036854772664, 9223372036854772665, 9223372036854772666, 9223372036854772667, 9223372036854772670, 9223372036854772671, 9223372036854772674, 9223372036854772675, 9223372036854772676, 9223372036854772677, 9223372036854772678, 9223372036854772679, 9223372036854772680, 9223372036854772683, 9223372036854772687, 9223372036854772689, 9223372036854772695, 9223372036854772696, 9223372036854772697, 9223372036854772698, 9223372036854772699, 9223372036854772700, 9223372036854772701, 9223372036854772702, 9223372036854772703, 9223372036854772704, 9223372036854772706, 9223372036854772707, 9223372036854772709, 9223372036854772710, 9223372036854772711, 9223372036854772712, 9223372036854772713, 9223372036854772714, 9223372036854772715, 9223372036854772716, 9223372036854772717, 9223372036854772718, 9223372036854772719, 9223372036854772720, 9223372036854772721, 9223372036854772722, 9223372036854772723, 9223372036854772724, 9223372036854772735, 9223372036854772736, 9223372036854772737, 9223372036854772738, 9223372036854772739, 9223372036854772744, 9223372036854772748, 9223372036854772751, 9223372036854772752, 9223372036854772753, 9223372036854772758, 9223372036854772761, 112233, 9223372036854772764, 9222968140491042131, 9223372036854772765, 9223372036854772766, 9223372036854772771, 9223372036854772772, 9223372036854772773, 9223372036854772778, 9223372036854772786, 9223372036854772787, 9223372036854772792, 9223372036854772793, 9223372036854772794, 9222968140497180179, 9223372036854772805, 1245, 9223372036854772809, 1340, 9223372036854772829, 9223372036854772831, 478364873, 9223372036854772832, 9223372036854772833, 9223372036854772835, 9223372036854772838, 9223372036854772845, 9223372036854772846, 9223372036854772847, 9223372036854772848, 9223372036854772849, 88888, 9223372036854772862, 9223372036854772866, 9223372036854772868, 9223372036854772869, 9223372036854772870, 9223372036854772872, 9223372036854772875, 9223372036854772876, 9223372036854772884, 9223372036854772907, 9223372036854772911, 9223372036854772913, 9223372036854772922, 9223372036854772926, 9223372036854772927, 9223372036854772928, 9223372036854772932, 9223372036854772937, 9223372036854772938, 9223372036854772939, 9223372036854772942, 9223372036854772943, 9223372036854772944, 3342, 9223372036854772959, 5958, 6730, 9223372036854773018, 9223372036854773019, 9223372036854773030, 9223372036854773032, 9223372036854773033, 9223372036854773034, 9223372036854773035, 9223372036854773039, 9359, 9223372036854773044, 9223372036854773045, 9223372036854773046, 9223372036854773048]>\n\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)\r\n\tat io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)\r\n\tat io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)\r\n\tat MyAPITest.APITest.findPetTest(APITest.java:40)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\r\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\r\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\r\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\r\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1259)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1259)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1678354374403,"stop":1678354378660,"uuid":"e712833d-bd1d-4985-8d48-65b4d2685fbf","historyId":"920577d90a20bb398b2257c4dddf344","fullName":"MyAPITest.APITest.findPetTest","labels":[{"name":"host","value":"Littlepanky"},{"name":"thread","value":"33144@Littlepanky.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"MyAPITest.APITest"},{"name":"testClass","value":"MyAPITest.APITest"},{"name":"testMethod","value":"findPetTest"},{"name":"suite","value":"MyAPITest.APITest"}],"links":[]}